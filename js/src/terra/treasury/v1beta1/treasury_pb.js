// source: terra/treasury/v1beta1/treasury.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var gogoproto_gogo_pb = require('../../../gogoproto/gogo_pb.js');
goog.object.extend(proto, gogoproto_gogo_pb);
var cosmos_base_v1beta1_coin_pb = require('../../../cosmos/base/v1beta1/coin_pb.js');
goog.object.extend(proto, cosmos_base_v1beta1_coin_pb);
goog.exportSymbol('proto.terra.treasury.v1beta1.EpochInitialIssuance', null, global);
goog.exportSymbol('proto.terra.treasury.v1beta1.EpochTaxProceeds', null, global);
goog.exportSymbol('proto.terra.treasury.v1beta1.Params', null, global);
goog.exportSymbol('proto.terra.treasury.v1beta1.PolicyConstraints', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.terra.treasury.v1beta1.Params = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.terra.treasury.v1beta1.Params, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.terra.treasury.v1beta1.Params.displayName = 'proto.terra.treasury.v1beta1.Params';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.terra.treasury.v1beta1.PolicyConstraints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.terra.treasury.v1beta1.PolicyConstraints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.terra.treasury.v1beta1.PolicyConstraints.displayName = 'proto.terra.treasury.v1beta1.PolicyConstraints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.terra.treasury.v1beta1.EpochTaxProceeds.repeatedFields_, null);
};
goog.inherits(proto.terra.treasury.v1beta1.EpochTaxProceeds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.terra.treasury.v1beta1.EpochTaxProceeds.displayName = 'proto.terra.treasury.v1beta1.EpochTaxProceeds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.terra.treasury.v1beta1.EpochInitialIssuance.repeatedFields_, null);
};
goog.inherits(proto.terra.treasury.v1beta1.EpochInitialIssuance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.terra.treasury.v1beta1.EpochInitialIssuance.displayName = 'proto.terra.treasury.v1beta1.EpochInitialIssuance';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.terra.treasury.v1beta1.Params.prototype.toObject = function(opt_includeInstance) {
  return proto.terra.treasury.v1beta1.Params.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.terra.treasury.v1beta1.Params} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.terra.treasury.v1beta1.Params.toObject = function(includeInstance, msg) {
  var f, obj = {
    taxPolicy: (f = msg.getTaxPolicy()) && proto.terra.treasury.v1beta1.PolicyConstraints.toObject(includeInstance, f),
    rewardPolicy: (f = msg.getRewardPolicy()) && proto.terra.treasury.v1beta1.PolicyConstraints.toObject(includeInstance, f),
    seigniorageBurdenTarget: jspb.Message.getFieldWithDefault(msg, 3, ""),
    miningIncrement: jspb.Message.getFieldWithDefault(msg, 4, ""),
    windowShort: jspb.Message.getFieldWithDefault(msg, 5, 0),
    windowLong: jspb.Message.getFieldWithDefault(msg, 6, 0),
    windowProbation: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.terra.treasury.v1beta1.Params}
 */
proto.terra.treasury.v1beta1.Params.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.terra.treasury.v1beta1.Params;
  return proto.terra.treasury.v1beta1.Params.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.terra.treasury.v1beta1.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.terra.treasury.v1beta1.Params}
 */
proto.terra.treasury.v1beta1.Params.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.terra.treasury.v1beta1.PolicyConstraints;
      reader.readMessage(value,proto.terra.treasury.v1beta1.PolicyConstraints.deserializeBinaryFromReader);
      msg.setTaxPolicy(value);
      break;
    case 2:
      var value = new proto.terra.treasury.v1beta1.PolicyConstraints;
      reader.readMessage(value,proto.terra.treasury.v1beta1.PolicyConstraints.deserializeBinaryFromReader);
      msg.setRewardPolicy(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSeigniorageBurdenTarget(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiningIncrement(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWindowShort(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWindowLong(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setWindowProbation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.terra.treasury.v1beta1.Params.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.terra.treasury.v1beta1.Params.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.terra.treasury.v1beta1.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.terra.treasury.v1beta1.Params.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaxPolicy();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.terra.treasury.v1beta1.PolicyConstraints.serializeBinaryToWriter
    );
  }
  f = message.getRewardPolicy();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.terra.treasury.v1beta1.PolicyConstraints.serializeBinaryToWriter
    );
  }
  f = message.getSeigniorageBurdenTarget();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMiningIncrement();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWindowShort();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getWindowLong();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getWindowProbation();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional PolicyConstraints tax_policy = 1;
 * @return {?proto.terra.treasury.v1beta1.PolicyConstraints}
 */
proto.terra.treasury.v1beta1.Params.prototype.getTaxPolicy = function() {
  return /** @type{?proto.terra.treasury.v1beta1.PolicyConstraints} */ (
    jspb.Message.getWrapperField(this, proto.terra.treasury.v1beta1.PolicyConstraints, 1));
};


/**
 * @param {?proto.terra.treasury.v1beta1.PolicyConstraints|undefined} value
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
*/
proto.terra.treasury.v1beta1.Params.prototype.setTaxPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
 */
proto.terra.treasury.v1beta1.Params.prototype.clearTaxPolicy = function() {
  return this.setTaxPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.terra.treasury.v1beta1.Params.prototype.hasTaxPolicy = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PolicyConstraints reward_policy = 2;
 * @return {?proto.terra.treasury.v1beta1.PolicyConstraints}
 */
proto.terra.treasury.v1beta1.Params.prototype.getRewardPolicy = function() {
  return /** @type{?proto.terra.treasury.v1beta1.PolicyConstraints} */ (
    jspb.Message.getWrapperField(this, proto.terra.treasury.v1beta1.PolicyConstraints, 2));
};


/**
 * @param {?proto.terra.treasury.v1beta1.PolicyConstraints|undefined} value
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
*/
proto.terra.treasury.v1beta1.Params.prototype.setRewardPolicy = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
 */
proto.terra.treasury.v1beta1.Params.prototype.clearRewardPolicy = function() {
  return this.setRewardPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.terra.treasury.v1beta1.Params.prototype.hasRewardPolicy = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string seigniorage_burden_target = 3;
 * @return {string}
 */
proto.terra.treasury.v1beta1.Params.prototype.getSeigniorageBurdenTarget = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
 */
proto.terra.treasury.v1beta1.Params.prototype.setSeigniorageBurdenTarget = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mining_increment = 4;
 * @return {string}
 */
proto.terra.treasury.v1beta1.Params.prototype.getMiningIncrement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
 */
proto.terra.treasury.v1beta1.Params.prototype.setMiningIncrement = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 window_short = 5;
 * @return {number}
 */
proto.terra.treasury.v1beta1.Params.prototype.getWindowShort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
 */
proto.terra.treasury.v1beta1.Params.prototype.setWindowShort = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 window_long = 6;
 * @return {number}
 */
proto.terra.treasury.v1beta1.Params.prototype.getWindowLong = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
 */
proto.terra.treasury.v1beta1.Params.prototype.setWindowLong = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 window_probation = 7;
 * @return {number}
 */
proto.terra.treasury.v1beta1.Params.prototype.getWindowProbation = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.terra.treasury.v1beta1.Params} returns this
 */
proto.terra.treasury.v1beta1.Params.prototype.setWindowProbation = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.toObject = function(opt_includeInstance) {
  return proto.terra.treasury.v1beta1.PolicyConstraints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.terra.treasury.v1beta1.PolicyConstraints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.terra.treasury.v1beta1.PolicyConstraints.toObject = function(includeInstance, msg) {
  var f, obj = {
    rateMin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rateMax: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cap: (f = msg.getCap()) && cosmos_base_v1beta1_coin_pb.Coin.toObject(includeInstance, f),
    changeRateMax: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.terra.treasury.v1beta1.PolicyConstraints}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.terra.treasury.v1beta1.PolicyConstraints;
  return proto.terra.treasury.v1beta1.PolicyConstraints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.terra.treasury.v1beta1.PolicyConstraints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.terra.treasury.v1beta1.PolicyConstraints}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRateMin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRateMax(value);
      break;
    case 3:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.setCap(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setChangeRateMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.terra.treasury.v1beta1.PolicyConstraints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.terra.treasury.v1beta1.PolicyConstraints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.terra.treasury.v1beta1.PolicyConstraints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRateMin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRateMax();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCap();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
  f = message.getChangeRateMax();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string rate_min = 1;
 * @return {string}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.getRateMin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.terra.treasury.v1beta1.PolicyConstraints} returns this
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.setRateMin = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string rate_max = 2;
 * @return {string}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.getRateMax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.terra.treasury.v1beta1.PolicyConstraints} returns this
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.setRateMax = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cosmos.base.v1beta1.Coin cap = 3;
 * @return {?proto.cosmos.base.v1beta1.Coin}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.getCap = function() {
  return /** @type{?proto.cosmos.base.v1beta1.Coin} */ (
    jspb.Message.getWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 3));
};


/**
 * @param {?proto.cosmos.base.v1beta1.Coin|undefined} value
 * @return {!proto.terra.treasury.v1beta1.PolicyConstraints} returns this
*/
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.setCap = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.terra.treasury.v1beta1.PolicyConstraints} returns this
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.clearCap = function() {
  return this.setCap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.hasCap = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string change_rate_max = 4;
 * @return {string}
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.getChangeRateMax = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.terra.treasury.v1beta1.PolicyConstraints} returns this
 */
proto.terra.treasury.v1beta1.PolicyConstraints.prototype.setChangeRateMax = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.prototype.toObject = function(opt_includeInstance) {
  return proto.terra.treasury.v1beta1.EpochTaxProceeds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.terra.treasury.v1beta1.EpochTaxProceeds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.toObject = function(includeInstance, msg) {
  var f, obj = {
    taxProceedsList: jspb.Message.toObjectList(msg.getTaxProceedsList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.terra.treasury.v1beta1.EpochTaxProceeds}
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.terra.treasury.v1beta1.EpochTaxProceeds;
  return proto.terra.treasury.v1beta1.EpochTaxProceeds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.terra.treasury.v1beta1.EpochTaxProceeds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.terra.treasury.v1beta1.EpochTaxProceeds}
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addTaxProceeds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.terra.treasury.v1beta1.EpochTaxProceeds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.terra.treasury.v1beta1.EpochTaxProceeds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaxProceedsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.Coin tax_proceeds = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.prototype.getTaxProceedsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.terra.treasury.v1beta1.EpochTaxProceeds} returns this
*/
proto.terra.treasury.v1beta1.EpochTaxProceeds.prototype.setTaxProceedsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.prototype.addTaxProceeds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.terra.treasury.v1beta1.EpochTaxProceeds} returns this
 */
proto.terra.treasury.v1beta1.EpochTaxProceeds.prototype.clearTaxProceedsList = function() {
  return this.setTaxProceedsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.prototype.toObject = function(opt_includeInstance) {
  return proto.terra.treasury.v1beta1.EpochInitialIssuance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.terra.treasury.v1beta1.EpochInitialIssuance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuanceList: jspb.Message.toObjectList(msg.getIssuanceList(),
    cosmos_base_v1beta1_coin_pb.Coin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.terra.treasury.v1beta1.EpochInitialIssuance}
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.terra.treasury.v1beta1.EpochInitialIssuance;
  return proto.terra.treasury.v1beta1.EpochInitialIssuance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.terra.treasury.v1beta1.EpochInitialIssuance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.terra.treasury.v1beta1.EpochInitialIssuance}
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cosmos_base_v1beta1_coin_pb.Coin;
      reader.readMessage(value,cosmos_base_v1beta1_coin_pb.Coin.deserializeBinaryFromReader);
      msg.addIssuance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.terra.treasury.v1beta1.EpochInitialIssuance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.terra.treasury.v1beta1.EpochInitialIssuance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuanceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cosmos_base_v1beta1_coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.Coin issuance = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.prototype.getIssuanceList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    jspb.Message.getRepeatedWrapperField(this, cosmos_base_v1beta1_coin_pb.Coin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.terra.treasury.v1beta1.EpochInitialIssuance} returns this
*/
proto.terra.treasury.v1beta1.EpochInitialIssuance.prototype.setIssuanceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.prototype.addIssuance = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.terra.treasury.v1beta1.EpochInitialIssuance} returns this
 */
proto.terra.treasury.v1beta1.EpochInitialIssuance.prototype.clearIssuanceList = function() {
  return this.setIssuanceList([]);
};


goog.object.extend(exports, proto.terra.treasury.v1beta1);
